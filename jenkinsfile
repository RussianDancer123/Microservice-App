pipeline {
    agent any

    stages {
        stage('Change ports') {
            steps {
                dir('ApiGateway/src/main/resources') {
                    sh "yq eval 'server.port = 8090' -i application.yml"
                    sh "yq eval '.spring.security.oauth2.resourceserver.jwt.jwk-set-uri = \"http://keycloak:8080/realms/microservice-realm/protocol/openid-connect/certs\"' -i application.yml"
                    sh "yq eval '.eureka.client.serviceUrl.defaultZone = \"http://eureka:8761/eureka/\"' -i application.yml"
                }
                dir('CompendiumClientService/src/main/resources') {
                    sh "yq eval '.spring.security.oauth2.resourceserver.jwt.jwk-set-uri = \"http://keycloak:8080/realms/microservice-realm/protocol/openid-connect/certs\"' -i application.yml"
                    sh "yq eval '.eureka.client.serviceUrl.defaultZone = \"http://eureka:8761/eureka/\"' -i application.yml"
                }
            }
        }

        stage('Build') {
            steps {
                dir('ApiGateway') {
                    sh 'mvn clean'
                    sh 'mvn package'
                    sh 'docker build -t api-gateway-service .'
                }
                dir('CompendiumClientService') {
                    sh 'mvn clean'
                    sh 'mvn package'
                    sh 'docker build -t compendium-client-service .'
                }
                dir('EurekaServer') {
                    sh 'mvn clean'
                    sh 'mvn package'
                    sh 'docker build -t eureka-service .'
                }
            }
        }

        stage('Run Spring Boot App') {
            steps {
                dir('docker'){
                    sh 'docker-compose up --build -d'
                }
            }
        }
    }
}